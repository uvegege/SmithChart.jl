var documenterSearchIndex = {"docs":
[{"location":"Examples/MakieIntegration/#Integration-with-Makie","page":"Integration with Makie","title":"Integration with Makie","text":"","category":"section"},{"location":"Examples/MakieIntegration/","page":"Integration with Makie","title":"Integration with Makie","text":"This example showcases the seamless integration of the Smith chart with Makie.jl's interactive functionalities. It demonstrates a typical scenario used to teach impedance matching, where we aim to transform a source impedance of 50+100j Omega to a load impedance of 50 Omega. To achieve this, we utilize a transmission line and a parallel stub, and control their lengths via sliders. By dynamically adjusting these lengths, users can observe how the source impedance seen by the load evolves on the Smith chart, visually illustrating the impedance matching process.","category":"page"},{"location":"Examples/MakieIntegration/","page":"Integration with Makie","title":"Integration with Makie","text":"using GLMakie\nusing SmithChart\n\nfig = Figure()\nax = SmithAxis(fig[1, 1], title = \"Stub Matching\")\n\nZl = 50.0\nRi = 50.0\nXi = 100.0\nzi = Ri + Xi*im\nzi = zi / Zl\n\nfunction simline(z, l)\n    bl = 2 * pi * l # Electrical length\n    return (z + im * tan(bl)) / (1 + im * z * tan(bl))\nend\n\nfunction simstub(z, l)\n    bl = 2 * pi * l\n    y_stub = im * tan(-bl)\n    return 1 / ((1 / z) + y_stub) \nend\n\nN = 101\nsg = SliderGrid(\n    fig[2, 1],\n    (label = \"Line\", range = range(0.0, 0.5, 151), format = \"{:.3f}λ\", startvalue = 0.0),\n    (label = \"Stub\", range = range(0.0, 0.5, 151), format = \"{:.3f}λ\", startvalue = 0.0))\n\nsliderobservables = [s.value for s in sg.sliders]\nz = lift(sliderobservables...) do slvalues...\n    line_index, stub_index = [slvalues...]\n    line_p = range(0.0, line_index, N)\n    stub_p = range(0.0, stub_index, N)\n    z_line = simline.(zi, line_p)\n    z_stub = simstub.(z_line[end], stub_p)\n    return [zi; z_line; z_stub]\nend\n\nzend = lift(x->x[end], z)\nsmithscatter!(zi)\nsmithplot!(z)\nsmithscatter!(zend)\nfig","category":"page"},{"location":"Examples/MakieIntegration/","page":"Integration with Makie","title":"Integration with Makie","text":"I've tested and it works with WGLMakie and Bonito, but don't know how to integrate it with Documenter.jl. The result would be something like the following gif.","category":"page"},{"location":"Examples/MakieIntegration/","page":"Integration with Makie","title":"Integration with Makie","text":"(Image: Sliders)","category":"page"},{"location":"Examples/ChartTypes/#Chart-type-and-grid-colors","page":"Chart type and grid colors","title":"Chart type and grid colors","text":"","category":"section"},{"location":"Examples/ChartTypes/","page":"Chart type and grid colors","title":"Chart type and grid colors","text":"Change type and control color of the grid or subgrid. The keywords zgridcolor and ygridcolor allow controlling both axes with a single keyword. Each of them takes precedence over their respective individual grid color settings (rgridcolor and xgridcolor for the Z-axis, and bgridcolor and ggridcolor for the Y-axis).","category":"page"},{"location":"Examples/ChartTypes/","page":"Chart type and grid colors","title":"Chart type and grid colors","text":"using SmithChart\nusing CairoMakie\nCairoMakie.activate!() #hide\nf = Figure(size = (1200, 800))\nsc1 = SmithAxis(f[1,1], type = :Z, subtitle = \"type :Z (default)\")\nsc2 = SmithAxis(f[1,2], type = :Y, subtitle = \"type :Y\")\nsc3 = SmithAxis(f[1,3], type = :ZY, subtitle = \"type :ZY\", gtickvisible = false, btickvisible = false)\nsc4 = SmithAxis(f[2,1], type = :Z, subtitle = \"rgridcolor = :red, xgridcolor = :green\", rgridcolor = :red, xgridcolor = :green)\nsc5 = SmithAxis(f[2,2], type = :Y, subtitle = \"ygridcolor = :blue\", ygridcolor = :blue)\nsc6 = SmithAxis(f[2,3], type = :ZY, subtitle = \"zgridcolor = :orange, ygridcolor = :green\", zgridcolor = :orange, ygridcolor = :green, gtickvisible = false, btickvisible = false)\nf","category":"page"},{"location":"Examples/Reflection/#Plot-Reflection-Coefficients","page":"Plot Reflection Coefficients","title":"Plot Reflection Coefficients","text":"","category":"section"},{"location":"Examples/Reflection/","page":"Plot Reflection Coefficients","title":"Plot Reflection Coefficients","text":"The functions smithplot and smithscatter allow plotting normalized impedance and reflection coefficient data on a Smith chart.","category":"page"},{"location":"Examples/Reflection/","page":"Plot Reflection Coefficients","title":"Plot Reflection Coefficients","text":"By default, the keyword argument reflection is set to false, meaning that the input is interpreted as normalized impedance. To plot reflection coefficient data instead (e.g., S-parameters), set reflection = true.","category":"page"},{"location":"Examples/Reflection/","page":"Plot Reflection Coefficients","title":"Plot Reflection Coefficients","text":"This is particularly useful when visualizing results from simulations or measurements in terms of scattering parameters (S-parameters).","category":"page"},{"location":"Examples/Reflection/","page":"Plot Reflection Coefficients","title":"Plot Reflection Coefficients","text":"using CairoMakie\nusing SmithChart\nCairoMakie.activate!() #hide\nzi = 3.8 - 1.9im\nfunction simline(z, l)\n    bl = 2 * pi * l \n    return (z + im * tan(bl)) / (1 + im * z * tan(bl))\nend\nl = range(0.0, 0.22, 101) \nz = simline.(zi, l)\nfig = Figure(size = (900,600))\nax = SmithAxis(fig[1,1])\nsmithplot!(ax, z, label = \"Impedance\")\n# Convert impedance z to reflection\nΓ = @. (z-1)/(z+1)\n# Plot with `reflection = true`\nsmithscatter!(ax, Γ[1:5:end], reflection = true, markersize = 11, color = :orange, marker = :cross, label = \"Reflection\\nreflection = true\")\nfig[1,2] = Legend(fig, ax)\nfig","category":"page"},{"location":"Examples/DynamicUpdate/#Dynamic-Annotation-Update","page":"Dynamic Annotation Update","title":"Dynamic Annotation Update","text":"","category":"section"},{"location":"Examples/DynamicUpdate/","page":"Dynamic Annotation Update","title":"Dynamic Annotation Update","text":"You can enable experimental real-time curve annotation using the textupdate = true keyword when creating the SmithAxis:","category":"page"},{"location":"Examples/DynamicUpdate/","page":"Dynamic Annotation Update","title":"Dynamic Annotation Update","text":"using GLMakie\nusing SmithChart\nGLMakie.activate!()\nfig = Figure(size = (500,500))\nax = SmithAxis(fig[1, 1]; subgrid = true, cutgrid = true, zoomupdate = true, textupdate = true, threshold = (150, 150))\nfig","category":"page"},{"location":"Examples/DynamicUpdate/","page":"Dynamic Annotation Update","title":"Dynamic Annotation Update","text":"The result would be something like the following gif.","category":"page"},{"location":"Examples/DynamicUpdate/","page":"Dynamic Annotation Update","title":"Dynamic Annotation Update","text":"(Image: Dynamic)","category":"page"},{"location":"Examples/VisualDetails/#Visual-Details","page":"Visual Details","title":"Visual Details","text":"","category":"section"},{"location":"Examples/VisualDetails/#Tick-options","page":"Visual Details","title":"Tick options","text":"","category":"section"},{"location":"Examples/VisualDetails/","page":"Visual Details","title":"Visual Details","text":"There are multiple keywords related to the position and visual details of the ticks. Two of the main ones are tickbox and tickalign. ","category":"page"},{"location":"Examples/VisualDetails/","page":"Visual Details","title":"Visual Details","text":"using SmithChart\nusing CairoMakie\n\nf = Figure(size = (1000, 750))\nsc = SmithAxis(f[1,1], tickbox = true, tickalign = (:center, :center), subtitle = \"tickbox = true, tickalign = (:center, :center)\")\nsc = SmithAxis(f[1,2], tickbox = false, tickalign = (:center, :center), subtitle = \"tickbox = false, tickalign = (:center, :center)\")\nsc = SmithAxis(f[2,1], tickbox = false, tickalign = (:right, :bottom), subtitle = \"tickbox = false, tickalign = (:center, :top)\")\nsc = SmithAxis(f[2,2], tickbox = false, tickalign = (:left, :bottom), subtitle = \"tickbox = false, tickalign = (:center, :bottom)\")\nf","category":"page"},{"location":"Examples/VisualDetails/#splitgrid-keyword","page":"Visual Details","title":"splitgrid keyword","text":"","category":"section"},{"location":"Examples/VisualDetails/","page":"Visual Details","title":"Visual Details","text":"The splitgrid keyword is a tuple that controls the number of lines into which each interval in the subgrid is divided. Each element of the tuple determines the number for a particular zoom value, so in this case we are only interested in the first one.","category":"page"},{"location":"Examples/VisualDetails/","page":"Visual Details","title":"Visual Details","text":"using SmithChart\nusing CairoMakie\nCairoMakie.activate!() #hide\nf = Figure(size = (1000, 750))\nsc = SmithAxis(f[1,1], subgrid = true, splitgrid = (1,), subtitle = \"splitgrid = (1,)\")\nsc = SmithAxis(f[1,2], subgrid = true, splitgrid = (2,), subtitle = \"splitgrid = (2,)\")\nsc = SmithAxis(f[2,1], subgrid = true, splitgrid = (3,), subtitle = \"splitgrid = (3,)\")\nsc = SmithAxis(f[2,2], subgrid = true, splitgrid = (4,), subtitle = \"splitgrid = (4,)\")\n\nf","category":"page"},{"location":"Examples/VisualDetails/#threshold-keyword","page":"Visual Details","title":"threshold keyword","text":"","category":"section"},{"location":"Examples/VisualDetails/","page":"Visual Details","title":"Visual Details","text":"threshold keyword controls the cut of the lines in the intersection with other arcs.","category":"page"},{"location":"Examples/VisualDetails/","page":"Visual Details","title":"Visual Details","text":"using SmithChart\nusing CairoMakie\n\nf = Figure(size = (1000, 750))\nsc = SmithAxis(f[1,1], subgrid = true, splitgrid = (2, 2), threshold = (50, 50), subtitle = \"Threshold (50, 50)\")\nsc = SmithAxis(f[1,2], subgrid = true, splitgrid = (2, 2), threshold = (50, 125), subtitle = \"Threshold (50, 125)\")\nsc = SmithAxis(f[2,1], subgrid = true, splitgrid = (2, 2), threshold = (25, 25), subtitle = \"Threshold (25, 25)\")\nsc = SmithAxis(f[2,2], subgrid = true, splitgrid = (2, 2), threshold = (25, 200), subtitle = \"Threshold (25, 200)\")\nf","category":"page"},{"location":"Examples/ConstantCircles/#Stability,-Gain-and-Noise-Circles","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"","category":"section"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"SmithChart.jl allows visualization of constant gain circles, constant noise circles, and stability regions, essential for amplifier design and stability analysis. These features can be useful for tasks such as designing low-noise amplifiers (LNAs), power amplifiers, and ensuring the stability of circuits over a range of frequencies and impedances.","category":"page"},{"location":"Examples/ConstantCircles/#Constant-Gain-Circles","page":"Stability, Gain and Noise Circles","title":"Constant Gain Circles","text":"","category":"section"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"The example used to demonstrate CGCircle is based on the design found in this article on designing a unilateral RF amplifier for a specified gain, where a detailed explanation can be found.","category":"page"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"using CairoMakie\nCairoMakie.activate!() #hide\nusing SmithChart\n\nf = Figure()\nsc = SmithAxis(f[1,1], cutgrid = true, title = \"Constant Gs Circles\")\n\nNF_to_F(nf) = 10.0^(nf/10.0)\nΓopt = 0.5 * cis(130 * pi / 180)\nNFmin = 1.6 # dB\nFmin = NF_to_F(NFmin)\nF2dB = NF_to_F(2.0)\nF2_5dB = NF_to_F(2.5)\nF3dB = NF_to_F(3.0)\nnf2 = NFCircle(F2dB, Fmin, Γopt, 20.0, 50.0, 361)\nnf2_5 = NFCircle(F2_5dB, Fmin, Γopt, 20.0, 50.0, 361)\nnf3 = NFCircle(F3dB, Fmin, Γopt, 20.0, 50.0, 361)\n\nsmithscatter!(sc, [Γopt], reflection = true, color = :blue, linewidth = 1.9)\ntext!(sc, \"Γopt\", position = Point2f(real(Γopt)-0.07, imag(Γopt)),  offset  = (3, 3), color = :blue, font = :bold)\ntext!(sc, \"$NFmin dB\", position = Point2f(real(Γopt), imag(Γopt)),  offset  = (-11, -16), color = :blue, font = :bold)\n\nlines!(sc, nf2, color = :green, linewidth = 1.9)\ntext!(sc, \"2.0 dB\", position = nf2[45],  offset  = (2, -6), color = :green, font = :bold)\n\nlines!(sc, nf2_5, color = :purple, linewidth = 1.9)\ntext!(sc, \"2.5 dB\", position = nf2_5[120],  offset  = (-35, -2), color = :purple, font = :bold)\n\nlines!(sc, nf3, color = :orange, linewidth = 1.9)\ntext!(sc, \"3.0 dB\", position = nf3[260],  offset  = (2, 2), color = :orange, font = :bold)\nf","category":"page"},{"location":"Examples/ConstantCircles/#Constant-Noise-Circles","page":"Stability, Gain and Noise Circles","title":"Constant Noise Circles","text":"","category":"section"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"The example for NFCircle is taken from this article on designing unilateral low-noise amplifiers, which provides a thorough explanation.","category":"page"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"using CairoMakie\nusing SmithChart\n\nf = Figure()\nsc = SmithAxis(f[1,1], cutgrid = true, title = \"Constant NF Circles\")\n\nS11 = 0.533 * cis(176.6 / 180 * π)\nS22 = 0.604 * cis(-58.0 / 180 * π)\nGo = abs2(S11)\nGs_max = 1 / (1 - abs2(S11))\ngain(dB) = 10.0^(dB/10.0)\n\ng1 = gain(0.0) / Gs_max\ng2 = gain(0.5) / Gs_max\ng3 = gain(1.0) / Gs_max\ng4 = gain(1.4) / Gs_max\n\nc1 = CGCircle(g1, S11, 361)\nc2 = CGCircle(g2, S11, 361)\nc3 = CGCircle(g3, S11, 361)\nc4 = CGCircle(g4, S11, 361)\n\nsmithscatter!(sc, [conj(S11)], reflection = true, color = :blue, linewidth = 1.9)\ntext!(sc, \"S11*\", position = Point2f(real(S11), -imag(S11)),  \n    offset  = (11, 11), color = :blue, font = :bold, fontsize = 11)\n\npoly!(sc, c1, color = (:green, 0.1), strokecolor = :green, strokewidth = 1.9)\ntext!(sc, \"0.0 dB\", position = c1[125],  offset  = (17, -4), color = :green, font = :bold)\n\nlines!(sc, c2, color = :red, linewidth = 1.9)\ntext!(sc, \"0.5 dB\", position = c2[110],  offset  = (-39, -1), color = :red, font = :bold)\n\nlines!(sc, c3, color = :magenta, linewidth = 1.9)\ntext!(sc, \"1.0 dB\", position = c3[260],  offset  = (2, 0), color = :magenta, font = :bold)\n\nlines!(sc, c4, color = :purple, linewidth = 1.9)\ntext!(sc, \"1.4 dB\", position = c3[45],  offset  = (2, -5), color = :purple, font = :bold)\nf","category":"page"},{"location":"Examples/ConstantCircles/#Stability-Circles","page":"Stability, Gain and Noise Circles","title":"Stability Circles","text":"","category":"section"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"The example illustrating StabilityCircle is based on this article about unconditional stability and potential instability in RF amplifier design, which explains the theory in detail.","category":"page"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"using CairoMakie\nusing SmithChart\n\nf = Figure(size = (1000, 500))\nLabel(f[0, 1:2] , \"Stable Regions\", fontsize = 24, font = :bold)\nS11, S12, S21, S22 =  [0.438868-0.778865im 1.4+0.2im; 0.1+0.43im  0.692125-0.361834im]\nA =  StabilityCircle(S11, S12, S21, S22, :source, 361; stable = false)\nB =  StabilityCircle(S11, S12, S21, S22, :source, 361; stable = true)\n\nax = SmithAxis(f[1,1], subtitle = \"StabilityCircle(... ; stable = false)\")\nregion = poly!(ax, A, strokecolor = :black, strokewidth = 1.2, color = Pattern('x', linecolor = :red, width = 1.3, background_color = (:red, 0.1)))\ntranslate!(region, (0, 0, -2)) \ntext!(ax, \"Unstable Input\", position = Point2f(-0.65, -0.5), font = :bold, color = :red, fontsize = 15)\nB =  StabilityCircle(S11, S12, S21, S22, :source, 361; stable = true);\nax = SmithAxis(f[1,2], subtitle = \"StabilityCircle(... ; stable = true)\")\nregion = poly!(ax, B, strokecolor = :black, strokewidth = 1.2, color = Pattern('\\\\', linecolor = :blue, width = 1.3, background_color = (:blue, 0.1)))\ntranslate!(region, (0, 0, -2)) \ntext!(ax, \"Stable Input\", position = Point2f(-0.1, 0.15), font = :bold, color = :blue, fontsize = 15)\nf","category":"page"},{"location":"Examples/ConstantCircles/","page":"Stability, Gain and Noise Circles","title":"Stability, Gain and Noise Circles","text":"using CairoMakie\nusing SmithChart\n\nf = Figure()\nS11, S12, S21, S22 = [ 0.0967927-0.604297im  0.0255292+0.0394621im ; -8.4396+11.0786im    0.552226-0.425271im]\nA =  StabilityCircle(S11, S12, S21, S22, :source, 361; stable = true);\nB =  StabilityCircle(S11, S12, S21, S22, :load, 361; stable = true);\nax = SmithAxis(f[1,1], title = \"Input and Output stability regions\")\ncolor1 = Pattern('/', linecolor = :blue, width = 1.3, background_color  = :transparent)\ncolor2 = Pattern('\\\\', linecolor = :green, width = 1.3, background_color  = :transparent)\nregion = poly!(ax, A, strokecolor = :black, strokewidth = 1.2, color = color1)\ntranslate!(region, (0, 0, -2)) \nregion = poly!(ax, B, strokecolor = :black, strokewidth = 1.2, color = color2)\ntranslate!(region, (0, 0, -2)) \ntext!(ax, \"Stable Input\", position = Point2f(-0.85, 0.2), font = :bold, color = :blue, rotation = 25*pi/180, fontsize = 12)\ntext!(ax, \"Stable Output\", position = Point2f(0.3, 0.5), font = :bold, color = :green, rotation = -18*pi/180, fontsize = 12)\nf","category":"page"},{"location":"SmithAxisBlock/#SmithAxis-Block","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"The SmithAxis is a layoutable visual block built on top of Makie.jl using the @Block macro. It provides an intuitive and familiar interface for plotting complex reflection and impedance data on a Smith chart.","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"It behaves like any other axis block (such as Axis, PolarAxis, or LScene) in Makie. You can place it inside a GridLayout, style it, and compose it freely with other visual components.","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"SmithAxisBlock/#Usage","page":"SmithAxis Block","title":"Usage","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"To use a SmithAxis, simply add it in a figure layout:","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"using SmithChart\nusing CairoMakie\n\nfig = Figure()\nsc = SmithAxis(fig[1, 1]; cutgrid = true, type = :Z)\nfig","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"This creates a Smith chart axis. You can then use functions like smithplot! or smithscatter! to draw data onto it.","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"SmithAxisBlock/#Keyword-Options","page":"SmithAxis Block","title":"Keyword Options","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"You can explore all keyword arguments by calling:","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"?SmithAxis","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"Here are some of the most commonly used:","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"Keyword Description Default\ncutgrid Whether to cut the Smith grid at ±90° for a clearer display false\ntype The Smith chart type: :Z (impedance) or :Y (admittance) :Z\ntickalign Alignment of tick marks (:center, :center)\ntickbox Show bounding boxes behind tick labels true\nzoomupdate Dynamically adjust grid resolution based on zoom level false\ntextupdate Enables dynamic hover annotations on plotted data (experimental) false\nspinewidth Linewidth of the exterior circumference. 2.2\nspinehorizontalwidth Linewidth of the spine horizontal line . 1.7","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"SmithAxisBlock/#Full-List-of-SmithAxis-fields-and-keywords","page":"SmithAxis Block","title":"Full List of SmithAxis fields and keywords","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"Below is a comprehensive list of the fields and keywords available for the SmithAxis block. Note that some fields are intentionally omitted because they are not intended for direct user manipulation and are used internally to control specific implementation details.","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"Also, some keywords related to the scene or internal aspects of Makie may have no visible effect. These were included preventively during the development of the block in case they might be needed later, even if they are not currently used.","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"SmithAxisBlock/#Contents","page":"SmithAxis Block","title":"Contents","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"Pages = [\"SmithAxisBlock.md\"]\nDepth = 3:3","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"SmithAxisBlock/#Smith-Chart-Settings","page":"SmithAxis Block","title":"Smith Chart Settings","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"type::Symbol = :Z   Smith Chart type. Valid values are :Z, :Y, and :ZY.\ncutgrid::Bool = true   Controls the cut of the lines.\ncutgridalg::Int = 2   Select cutgrid algorithm (1 or 2).\nsubgrid::Bool = false   Controls if there is a subgrid drawn in the image.\nzoomupdate::Bool = false   Controls the interactive subgrid update while zooming.\ntextupdate::Bool = false   Controls if there are interactive text annotations while moving and zooming.\nntextvals::Int = 7   Controls the maximum number of text labels.\nthreshold = (100, 100) Threshold controling the cut of the grid","category":"page"},{"location":"SmithAxisBlock/#Scene-Settings","page":"SmithAxis Block","title":"Scene Settings","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"height = nothing   The height setting of the scene.\nwidth = nothing   The width setting of the scene.\ntellwidth::Bool = true   Controls if the parent layout can adjust to this element's width.\ntellheight::Bool = true   Controls if the parent layout can adjust to this element's height.\nhalign = :center   The horizontal alignment of the scene in its suggested bounding box.\nvalign = :center   The vertical alignment of the scene in its suggested bounding box.\nalignmode = Inside()   The alignment mode of the scene in its suggested bounding box.\nxreversed::Bool = false   Controls if the x axis goes rightwards (false) or leftwards (true) in default camera orientation.\nyreversed::Bool = false   Controls if the y axis goes leftwards (false) or rightwards (true) in default camera orientation.","category":"page"},{"location":"SmithAxisBlock/#Background-and-Clipping","page":"SmithAxis Block","title":"Background and Clipping","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"sample_density::Int = 361   The density at which curved lines are sampled (grid lines, spine lines, clip).\nbackgroundcolor   The background color of the axis.\nbackgroundcolorint   The internal background color of the axis.\nclip::Bool = true   Controls whether to activate the nonlinear clip feature.\nclipcolor   Sets the color of the clip polygon (mainly for debugging).\ninnerclipz::Float32 = -100.0   Sets the z value of inner clip.\nouterclipz::Float32 = 100.0   Sets the z value of outer clip.","category":"page"},{"location":"SmithAxisBlock/#Limits-and-Transformations","page":"SmithAxis Block","title":"Limits and Transformations","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"limits = ((-1., 1.), (-1., 1.))   Define axis limits.\naspect::Float32 = 1.0   Controls the forced aspect ratio of the Smith Chart.\nvlimit::Float32 = 1.0   Radial limit of the Smith Chart.\nxautolimitmargin::Tuple{Float64, Float64} = (0.05, 0.05)   Relative margins added to the autolimits in x direction.\nyautolimitmargin::Tuple{Float64, Float64} = (0.05, 0.05)   Relative margins added to the autolimits in y direction.","category":"page"},{"location":"SmithAxisBlock/#Title-and-Subtitle","page":"SmithAxis Block","title":"Title and Subtitle","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"title = \"\"   The title of the plot.\ntitlegap::Float32 = 4.0   The gap between the title and the top of the axis.\ntitlealign = :center   The alignment of the title (:center, :left, or :right).\ntitlesize::Float32 = 16.0   The fontsize of the title.\ntitlefont = :bold   The font of the title.\ntitlecolor = :black   The color of the title.\ntitlevisible::Bool = true   Controls if the title is visible.\nsubtitle = \"\"   The content of the axis subtitle.\nsubtitlefont = :regular   The font family of the subtitle.\nsubtitlesize::Float64 = 16.0   The subtitle's font size.\nsubtitlegap::Float64 = 0   The gap between subtitle and title.\nsubtitlevisible::Bool = true   Controls if the subtitle is visible.\nsubtitlecolor::RGBAf = :black   The color of the subtitle.\nsubtitlelineheight::Float64 = 1   The axis subtitle line height multiplier.","category":"page"},{"location":"SmithAxisBlock/#Spine-Settings","page":"SmithAxis Block","title":"Spine Settings","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"spinez::Float32 = 9000   Sets the z value of the exterior circumference. To place the grid above plots set a value > 1.\nspinecolor = :black   Color of the exterior circumference.\nspinewidth::Float32 = 2.2   Linewidth of the exterior circumference.\nspinehorizontalwidth::Float32 = 1.7   Linewidth of the horizontal line.\nspinestyle   Linestyle of the exterior circumference.\nspinevisible::Bool = true   Controls if the exterior circumference is visible.","category":"page"},{"location":"SmithAxisBlock/#Grid-Settings","page":"SmithAxis Block","title":"Grid Settings","text":"","category":"section"},{"location":"SmithAxisBlock/#General-Grid","page":"SmithAxis Block","title":"General Grid","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"gridcolor = nothing   Controls the color of ALL the grid. This has preference over other color keywords. \nzgridcolor = nothing   Controls the color of Z smith chart grid. This has preference over rgridcolor and xgridcolor when is not equal to nothing.\nygridcolor = nothing   Controls the color of Y smith chart grid. This has preference over bgridcolor and ggridcolor when is not equal to nothing.\nsplitgrid = (1, 1, 3)   Controls the number of times the grid is split for each zoom level.","category":"page"},{"location":"SmithAxisBlock/#Resistance-Grid","page":"SmithAxis Block","title":"Resistance Grid","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"rvals::Vector{Float64} = [0.2, 0.4, 0.6, 1.0, 2.0, 5.0, 20.0]   Resistance grid positions.\nrgridz::Float32 = -50   Sets the z value of the Resistance arcs grid.\nrgridcolor = :black   Color of the Resistance grid.\nrgridwidth::Float32 = 0.7   Linewidth of the Resistance grid.\nrgridstyle   Linestyle of the Resistance grid.\nrgridvisible::Bool = true   Controls if the Resistance grid is visible.\nrsubgridstyle = :dash   Resistance subgrid style.\nrsubgridwidth::Float32 = 0.7   Linewidth of the Resistance subgrid.\nrsubgridcolor = :black   Color of the Resistance subgrid.","category":"page"},{"location":"SmithAxisBlock/#Reactance-Grid","page":"SmithAxis Block","title":"Reactance Grid","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"xvals::Vector{Float64} = [0.2, 0.4, 0.6, 1.0, 2.0, 5.0, 20.0]   Reactance grid positions.\nxgridz::Float32 = -50   Sets the z value of the Reactance arcs grid.\nxgridcolor = :black   Color of the Reactance grid.\nxgridwidth::Float32 = 0.7   Linewidth of the Reactance grid.\nxgridstyle   Linestyle of the Reactance grid.\nxgridvisible::Bool = true   Controls if the Reactance grid is visible.\nxsubgridstyle = :dash   Reactance subgrid style.\nxsubgridwidth::Float32 = 0.7   Linewidth of the Reactance subgrid.\nxsubgridcolor = :black   Color of the Reactance subgrid.","category":"page"},{"location":"SmithAxisBlock/#Conductance-Grid","page":"SmithAxis Block","title":"Conductance Grid","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"gvals::Vector{Float64} = [0.2, 0.4, 0.6, 1.0, 2.0, 5.0, 20.0]   Conductance grid positions.\nggridz::Float32 = -50   Sets the z value of the Conductance arcs grid.\nggridcolor = :black   Color of the Conductance grid.\nggridwidth::Float32 = 0.7   Linewidth of the Conductance grid.\nggridstyle   Linestyle of the Conductance grid.\nggridvisible::Bool = true   Controls if the Conductance grid is visible.\ngsubgridstyle = :dash   Conductance subgrid style.\ngsubgridwidth::Float32 = 0.7   Linewidth of the Conductance subgrid.\ngsubgridcolor = :black   Color of the Conductance subgrid.","category":"page"},{"location":"SmithAxisBlock/#Susceptance-Grid","page":"SmithAxis Block","title":"Susceptance Grid","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"bvals::Vector{Float64} = [0.2, 0.4, 0.6, 1.0, 2.0, 5.0, 20.0]   Susceptance grid positions.\nbgridz::Float32 = -50   Sets the Susceptance value of the arcs grid.\nbgridcolor = :black   Color of the Susceptance grid.\nbgridwidth::Float32 = 0.7   Linewidth of the Susceptance grid.\nbgridstyle   Linestyle of the Susceptance grid.\nbgridvisible::Bool = true   Controls if the Susceptance grid is visible.\nbsubgridstyle = :dash   Susceptance subgrid style.\nbsubgridwidth::Float32 = 0.7   Linewidth of the Susceptance subgrid.\nbsubgridcolor = :black   Color of the Susceptance subgrid.","category":"page"},{"location":"SmithAxisBlock/#Tick-Settings","page":"SmithAxis Block","title":"Tick Settings","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"tickalign = (:center, :center) Align of the R ticks\ntickbox::Bool = true Controls if we draw a box behind the text","category":"page"},{"location":"SmithAxisBlock/#Reactance-Ticks","page":"SmithAxis Block","title":"Reactance Ticks","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"xtickvisible::Bool = true Controls if the exterior circunference ticks are visible\nxtickformat = Makie.automatic The formatter for the exterior ticks.\nxticklabelsize::Float32 = inherit(scene, (:Axis, :xticklabelsize), inherit(scene, :fontsize, 16)) The fontsize of the exterior tick labels.\nxticklabelfont = inherit(scene, (:Axis, :yticklabelfont), inherit(scene, :font, Makie.defaultfont())) The font of the exterior tick labels.\nxticklabelcolor = inherit(scene, (:Axis, :yticklabelcolor), inherit(scene, :textcolor, :black)) The color of the exterior tick labels.\nxticklabelpad::Float32 = 4.5f0 Padding of the exterior ticks label.\nxticklabelstrokewidth::Float32 = 0.0 The width of the outline of exterior ticks. Setting this to 0 will remove the outline.\nxticklabelstrokecolor = automatic The color of the outline of exterior ticks. By default this uses the background color.","category":"page"},{"location":"SmithAxisBlock/#Resistance-Ticks","page":"SmithAxis Block","title":"Resistance Ticks","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"rtickformat = Makie.automatic   The formatter for the r ticks\nrticklabelsize::Float32 = inherit(scene, (:Axis, :yticklabelsize), inherit(scene, :fontsize, 16))   The fontsize of the RESISTANCE tick labels.\nrticklabelfont = inherit(scene, (:Axis, :xticklabelfont), inherit(scene, :font, Makie.defaultfont()))   The font of the r tick labels.\nrticklabelcolor = inherit(scene, (:Axis, :xticklabelcolor), inherit(scene, :textcolor, :black))   The color of the r tick labels.\nrticklabelstrokewidth::Float32 = 0.0   The width of the outline of r ticks. Setting this to 0 will remove the outline.\nrticklabelstrokecolor = automatic   The color of the outline of r ticks. By default this uses the background color.\nrticklabelpad::Float32 = 4f0   Padding of the r ticks label.\nrtickvisible::Bool = inherit(scene, (:Axis, :xticklabelsvisible), true)   Controls if the r ticks are visible.\nrtickangle::Float32 = 0.0   The angle in radians along which the r ticks are printed.","category":"page"},{"location":"SmithAxisBlock/#Susceptance-Ticks","page":"SmithAxis Block","title":"Susceptance Ticks","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"btickvisible::Bool = true   Controls if the exterior circunference ticks are visible\nbtickformat = Makie.automatic   The formatter for the exterior ticks.\nbticklabelsize::Float32 = inherit(scene, (:Axis, :xticklabelsize), inherit(scene, :fontsize, 16))   The fontsize of the exterior tick labels.\nbticklabelfont = inherit(scene, (:Axis, :yticklabelfont), inherit(scene, :font, Makie.defaultfont()))   The font of the exterior tick labels.\nbticklabelcolor = inherit(scene, (:Axis, :yticklabelcolor), inherit(scene, :textcolor, :black))   The color of the exterior tick labels.\nbticklabelpad::Float32 = 4f0   Padding of the exterior ticks label.\nbticklabelstrokewidth::Float32 = 0.0   The width of the outline of exterior ticks. Setting this to 0 will remove the outline.\nbticklabelstrokecolor = automatic   The color of the outline of exterior ticks. By default this uses the background color.","category":"page"},{"location":"SmithAxisBlock/#Conductance-Ticks","page":"SmithAxis Block","title":"Conductance Ticks","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"gtickformat = Makie.automatic   The formatter for the Conductance ticks.\ngticklabelsize::Float32 = inherit(scene, (:Axis, :yticklabelsize), inherit(scene, :fontsize, 16))   The fontsize of the Conductance btick labels.\ngticklabelfont = inherit(scene, (:Axis, :xticklabelfont), inherit(scene, :font, Makie.defaultfont()))   The font of the Conductance tick labels.\ngticklabelcolor = inherit(scene, (:Axis, :xticklabelcolor), inherit(scene, :textcolor, :black))   The color of the Conductance tick labels.\ngticklabelstrokewidth::Float32 = 0.0   The width of the outline of Conductance ticks. Setting this to 0 will remove the outline.\ngticklabelstrokecolor = automatic   The color of the outline of Conductance ticks. By default this uses the background color.\ngticklabelpad::Float32 = 4f0   Padding of the Conductance ticks label.\ngtickvisible::Bool = true   Controls if the Conductance ticks are visible.\ngtickangle::Float32 = 0.0   The angle in radians along which the Conductance ticks are printed.","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"SmithAxisBlock/#Example","page":"SmithAxis Block","title":"Example","text":"","category":"section"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"using SmithChart\nusing CairoMakie\n\nfig = Figure(size = (800, 600))\nsc = SmithAxis(fig[1, 1], cutgrid = true)\nr = 0.6 .+ 0.15 * cis.(range(0, 2π; length = 300))\nsmithplot!(sc, r; color = :dodgerblue, linewidth = 2)\nfig\n","category":"page"},{"location":"SmithAxisBlock/","page":"SmithAxis Block","title":"SmithAxis Block","text":"","category":"page"},{"location":"api_reference/#Public-Documentation","page":"Public Documentation","title":"Public Documentation","text":"","category":"section"},{"location":"api_reference/","page":"Public Documentation","title":"Public Documentation","text":"Documentation for SmithChart.jl public interface.","category":"page"},{"location":"api_reference/#Contents","page":"Public Documentation","title":"Contents","text":"","category":"section"},{"location":"api_reference/","page":"Public Documentation","title":"Public Documentation","text":"Pages = [\"api_reference.md\"]\nDepth = 2:2","category":"page"},{"location":"api_reference/#Index","page":"Public Documentation","title":"Index","text":"","category":"section"},{"location":"api_reference/","page":"Public Documentation","title":"Public Documentation","text":"Pages = [\"api_reference.md\"]","category":"page"},{"location":"api_reference/#Public-Interface","page":"Public Documentation","title":"Public Interface","text":"","category":"section"},{"location":"api_reference/#SmithChart.smithplot","page":"Public Documentation","title":"SmithChart.smithplot","text":"smithplot(z; kwargs...)\n\nPlot lines on the Smith Chart.\n\nValid Keywords:\n\ncolor  sets the color of the marker. Read ? scatter.\ncolormap = :viridis sets the colormap that is sampled for numeric colors. \nlinestyle = :rect sets the pattern of the line e.g. :solid, :dot, :dashdot.\nline_width = 2.8 sets the width of the line in pixel units.\nlabel = nothing\nreflection = false: Specifies whether it is a normalized impedance or a reflection coefficient.\nfreq = Float64[] Array of frequencies associated with each represented value. Mainly used by DataInspector.\n\nExamples\n\nusing SmithChart\nusing CairoMakie\n\nfig = Figure(size = (800, 600))\nsc = SmithAxis(fig[1, 1], cutgrid = true)\nr = 0.6 .+ 0.15 * exp.(1im .* range(0, 2π; length = 300))\nsmithplot!(sc, r; color = :dodgerblue, linewidth = 2)\nfig\n\n```\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#SmithChart.smithscatter","page":"Public Documentation","title":"SmithChart.smithscatter","text":"smithscatter(z; kwargs...)\n\nScatter points on the Smith Chart.\n\nValid Keywords:\n\ncolor  sets the color of the marker. Read ? scatter.\ncolormap = :viridis sets the colormap that is sampled for numeric colors. \nmarker = :rect sets the scatter marker.\nmarkersize = 9 sets the size of the marker.\nlabel = nothing\nreflection = false: Specifies whether it is a normalized impedance or a reflection coefficient.\nfreq = Float64[] Array of frequencies associated with each represented value. Mainly used Mainly used by DataInspector.\n\nExamples\n\nusing SmithChart\nusing CairoMakie\n\nfig = Figure(size = (800, 600))\nsc = SmithAxis(fig[1, 1], cutgrid = true)\nr = 0.6 .+ 0.15 * exp.(1im .* range(0, 2π; length = 300))\nsmithscatter!(sc, r; color = :dodgerblue, linewidth = 2)\nfig\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#SmithChart.vswr","page":"Public Documentation","title":"SmithChart.vswr","text":"vswr(v; args...)\n\nPlots reflection data on a Smith chart, configured to visualize Voltage Standing Wave Ratio (VSWR) characteristics.\n\nThis function is a convenience wrapper around smithplot, with the keyword reflection = true set by default. It is intended for use when plotting reflection coefficients or S-parameter data, where impedance normalization is not needed.\n\nArguments\n\nv: VSWR value\nargs...: Additional keyword arguments forwarded to smithplot, allowing customization of plot appearance and behavior.\n\nExample\n\nvswr(2.0; color = :red, linewidth = 2)\n\nThis plots a VSWR = 2 circle centered at the origin with radius 1/3.\n\nSee also: smithplot, smithscatter\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#SmithChart.datamarkers","page":"Public Documentation","title":"SmithChart.datamarkers","text":"datamarkers(ax::SmithAxis, gp::GridPosition, priority = 100; fontsize = 10.0, title = true, kwargs...)\n\nAllows creating data markers with double click on the lines or scatter plots.\n\nArguments\n\nax::SmithAxis is the SmithAxis.\ngp::GridPosition is a GridPosition. Example: fig[1,2]\nmarkerdict::Dict{Int, ComplexF64} is a Dict that stores the data of each marker. If you don't need\n\nthe values you can ignore this argument.\n\nExamples\n\nusing SmithChart\nusing GLMakie\n\nfig = Figure(size = (800, 600))\nsc = SmithAxis(fig[1, 1], cutgrid = true)\nr = 0.6 .+ 0.35 * cis.(range(0, 2π; length = 300))\nsmithplot!(sc, r; color = :dodgerblue, linewidth = 2)\ndatamarkers(sc, fig[1,2])\nfig\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#SmithChart.NFCircle","page":"Public Documentation","title":"SmithChart.NFCircle","text":"NFCircle(F, Fmin, Γopt, Rn, Zo)\n\nComputes the points of the constant Noise Figure Circle.\n\nArguments\n\nF: noise factor\nFmin: minimum noise factor\nΓopt: optimimum source reflection coefficient related to Zopt or Yopt.\nRn: noise resistance parameter\nZo: Reference Impedance\nNp: Number of points\n\nExample\n\nusing SmithChart\n\nNF_to_F(nf) = 10.0^(nf/10.0)\nΓopt = 0.5 * cis(130 * pi / 180)\nNFmin = 1.6 # dB\nFmin = NF_to_F(NFmin)\nF2dB = NF_to_F(2.0)\nnf2 = NFCircle(F2dB, Fmin, Γopt, 20.0, 50.0, 361)\n\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#SmithChart.CGCircle","page":"Public Documentation","title":"SmithChart.CGCircle","text":"CGCircle(gi, Sii)\n\nComputes the points of the Constant Gain Circle.\n\nArguments\n\ngi: It's gsource or gload and it's value is G / Gmax\nSii: Reflection S parameter. S11 for Gs and S22 for Gl. \nNp: Number of points\n\nExample\n\nusing SmithChart\n\nS11 = 0.533 * cis(176.6 / 180 * π)\nGs_max = 1 / (1 - abs2(S11))\ngain(dB) = 10.0^(dB/10.0)\ng1 = gain(0.0) / Gs_max\nc1 = CGCircle(g1, S11, 361)\n\n\n\n\n\n\n","category":"function"},{"location":"api_reference/#SmithChart.StabilityCircle","page":"Public Documentation","title":"SmithChart.StabilityCircle","text":"StabilityCircle(S11, S12, S21, S22, inout::Symbol, Np; stable = false)\n\nComputes the region of stability (or unstability) and returns a Makie.Polygon.\n\nArguments\n\nSii: S-parameter\ninout: a symbol selecting source or load regions. Valid values are :load or :source.\nNp: Number of points.\nstable: Selects if the region corresponds to the stable (true) or unstable (false) region.\n\nExamples\n\nusing SmithChart\n\nS11, S12, S21, S22 =  [0.438868-0.778865im 1.4+0.2im; 0.1+0.43im  0.692125-0.361834im]\nA =  StabilityCircle(S11, S12, S21, S22, :source, 361; stable = false)\n\n\n\n\n\n\n","category":"function"},{"location":"Examples/TickPositions/#Change-tick-positions","page":"Change tick positions","title":"Change tick positions","text":"","category":"section"},{"location":"Examples/TickPositions/","page":"Change tick positions","title":"Change tick positions","text":"You can customize the position of the ticks on the Smith chart using the xvals and rvals keywords. These control the placement of the reactance arcs (xvals) and resistance circles (rvals) respectively. ","category":"page"},{"location":"Examples/TickPositions/","page":"Change tick positions","title":"Change tick positions","text":"using CairoMakie\nusing SmithChart\n\nf = Figure()\nsc = SmithAxis(f[1,1], xvals = [0.1, 0.3, 0.7, 1.0, 2.0, 4.0, 10.0], rvals = [0.2, 0.4, 0.6, 1.0, 2.5, 7.0, 15.0])\nf","category":"page"},{"location":"Examples/InteractiveDataMarkers/#Interactive-Data-Markers","page":"Interactive Data Markers","title":"Interactive Data Markers","text":"","category":"section"},{"location":"Examples/InteractiveDataMarkers/","page":"Interactive Data Markers","title":"Interactive Data Markers","text":"Interactive markers can be added to a Smith chart using the function datamarkers(sc::SmithAxis, gp::GridPosition). sc is your SmithAxis block and gp is a GridPosition where the interactive widget will be placed—this can be a position like fig[1, 2] or GridLayout.","category":"page"},{"location":"Examples/InteractiveDataMarkers/","page":"Interactive Data Markers","title":"Interactive Data Markers","text":"Add marker: Double-click on a plotted line or scatter point.","category":"page"},{"location":"Examples/InteractiveDataMarkers/","page":"Interactive Data Markers","title":"Interactive Data Markers","text":"Remove marker: Double-click on an existing marker.","category":"page"},{"location":"Examples/InteractiveDataMarkers/","page":"Interactive Data Markers","title":"Interactive Data Markers","text":"Move marker: Drag it using the left mouse button.","category":"page"},{"location":"Examples/InteractiveDataMarkers/","page":"Interactive Data Markers","title":"Interactive Data Markers","text":"(Image: DataMarkers)","category":"page"},{"location":"#SmithChart.jl","page":"SmithChart.jl","title":"SmithChart.jl","text":"","category":"section"},{"location":"#Features","page":"SmithChart.jl","title":"Features","text":"","category":"section"},{"location":"","page":"SmithChart.jl","title":"SmithChart.jl","text":"Interactive Smith Charts: Built on Makie.jl, SmithChart.jl allows for visualization and exploration of impedance and reflection data.\nSmithAxis Block: Provides a dedicated SmithAxis block, similar to Axis or PolarAxis, for drawing the Smith chart grid.\nsmithplot! and smithscatter! Functions: These functions are used to plot data on the Smith chart and have the same attributes as Makie’s lines! and scatter! respectively. They also include a convenient reflection keyword, allowing you to plot reflection data directly without manual conversion. Both functions feature a customised DataInspector (see examples below).\nvswr! Function: plot constant VSWR circles on the Smith chart using vswr!.\nNormalized Data: Currently, the package assumes that impedance or admittance values are already normalized.\nInteractive Data Markers: Add and remove data markers with a double-click directly on the plots using the datamarkers function.\nCustomizable Grid: Offers extensive customization options for the Smith chart grid, including:   Tick positions for constant resistance and reactance circles.   Color and linestyle control for the grid lines.   Line cutting at intersections to prevent visual clutter.\nDynamic Text Annotations: An optional feature allows tick annotations to move dynamically while zooming to keep them visible. This functionality is still under development and may need further refinement.","category":"page"},{"location":"","page":"SmithChart.jl","title":"SmithChart.jl","text":"(Image: Example)","category":"page"}]
}
